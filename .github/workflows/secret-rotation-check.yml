name: Secret Rotation Check

on:
  schedule:
    # Run on the 1st of every month at 9 AM UTC
    - cron: '0 9 1 * *'
  workflow_dispatch: # Allow manual triggers

jobs:
  check-rotation:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check secret rotation status
        id: check
        run: |
          # Calculate days since last rotation
          # This is a placeholder - in production, track rotation dates in a file or secret metadata
          LAST_ROTATION_DATE="2025-01-15"  # Update this when secrets are rotated
          CURRENT_DATE=$(date +%Y-%m-%d)

          # Calculate days difference
          DAYS_DIFF=$(( ( $(date -d "$CURRENT_DATE" +%s) - $(date -d "$LAST_ROTATION_DATE" +%s) ) / 86400 ))

          echo "days_since_rotation=$DAYS_DIFF" >> $GITHUB_OUTPUT

          # Check if rotation is due (90 days)
          if [ $DAYS_DIFF -ge 90 ]; then
            echo "rotation_needed=true" >> $GITHUB_OUTPUT
            echo "⚠️ Secret rotation needed! $DAYS_DIFF days since last rotation."
          elif [ $DAYS_DIFF -ge 75 ]; then
            echo "rotation_needed=warning" >> $GITHUB_OUTPUT
            echo "⏰ Secret rotation approaching in $((90 - DAYS_DIFF)) days."
          else
            echo "rotation_needed=false" >> $GITHUB_OUTPUT
            echo "✅ Secrets are current. $DAYS_DIFF days since last rotation."
          fi

      - name: Create rotation reminder issue
        if: steps.check.outputs.rotation_needed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const daysOld = ${{ steps.check.outputs.days_since_rotation }};

            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🔐 SECRET ROTATION REQUIRED: OpenAI API Key (${daysOld} days old)`,
              body: `## Secret Rotation Required

            **Status:** 🔴 OVERDUE
            **Days Since Last Rotation:** ${daysOld}
            **Recommended Rotation Frequency:** 90 days

            ### Secrets Requiring Rotation

            - [ ] \`OPENAI_API_KEY\` (Production)
            - [ ] \`OPENAI_API_KEY_DEV\` (Development/Staging)

            ### Rotation Process

            1. **Generate New Keys**
               - Go to [OpenAI API Keys Dashboard](https://platform.openai.com/api-keys)
               - Create new API key for production
               - Create new API key for development

            2. **Test New Keys**
               - Update \`OPENAI_API_KEY_DEV\` in GitHub Secrets
               - Run tests in development environment
               - Verify AI safety scanner works correctly

            3. **Update Production Secret**
               - Update \`OPENAI_API_KEY\` in GitHub Secrets (Production environment)
               - Monitor production workflows
               - Verify no errors

            4. **Revoke Old Keys**
               - Wait 7 days for rollback period
               - Revoke old keys from OpenAI dashboard
               - Document rotation in \`docs/changelog.md\`

            5. **Update Rotation Tracking**
               - Update \`LAST_ROTATION_DATE\` in \`.github/workflows/secret-rotation-check.yml\`
               - Close this issue

            ### Documentation

            📚 See: [docs/secrets-management.md](./docs/secrets-management.md)

            ### Security Notes

            - Use separate keys for production and development
            - Enable GitHub Environment protection for production
            - Audit API usage before and after rotation
            - Never log or expose secret values

            ---
            *This issue was automatically created by the Secret Rotation Check workflow.*`,
              labels: ['security', 'P0', 'infra']
            });

            console.log(`Created issue #${issue.data.number}`);

      - name: Create rotation warning issue
        if: steps.check.outputs.rotation_needed == 'warning'
        uses: actions/github-script@v7
        with:
          script: |
            const daysOld = ${{ steps.check.outputs.days_since_rotation }};
            const daysRemaining = 90 - daysOld;

            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `⏰ SECRET ROTATION APPROACHING: OpenAI API Key (${daysRemaining} days remaining)`,
              body: `## Secret Rotation Approaching

            **Status:** 🟡 WARNING
            **Days Since Last Rotation:** ${daysOld}
            **Days Until Rotation Required:** ${daysRemaining}
            **Recommended Rotation Frequency:** 90 days

            ### Secrets Requiring Rotation Soon

            - [ ] \`OPENAI_API_KEY\` (Production)
            - [ ] \`OPENAI_API_KEY_DEV\` (Development/Staging)

            ### Action Required

            Plan and schedule secret rotation within the next ${daysRemaining} days.

            ### Rotation Process

            See: [docs/secrets-management.md](./docs/secrets-management.md)

            ---
            *This issue was automatically created by the Secret Rotation Check workflow.*`,
              labels: ['security', 'P1', 'infra']
            });

            console.log(`Created warning issue #${issue.data.number}`);

      - name: Report status
        run: |
          echo "### Secret Rotation Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Days since last rotation: ${{ steps.check.outputs.days_since_rotation }}" >> $GITHUB_STEP_SUMMARY
          echo "Rotation needed: ${{ steps.check.outputs.rotation_needed }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.check.outputs.rotation_needed }}" == "true" ]; then
            echo "⚠️ **ACTION REQUIRED:** Secret rotation is overdue!" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ steps.check.outputs.rotation_needed }}" == "warning" ]; then
            echo "⏰ **HEADS UP:** Secret rotation approaching soon." >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ Secrets are current and within rotation schedule." >> $GITHUB_STEP_SUMMARY
          fi
