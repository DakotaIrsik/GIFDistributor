name: OIDC Cloudflare Deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# Required for OIDC authentication
permissions:
  id-token: write
  contents: read

jobs:
  deploy-to-cloudflare:
    runs-on: ubuntu-latest
    environment: production  # Uses environment-specific secrets

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Cloudflare via OIDC
        id: cloudflare-auth
        run: |
          # Get OIDC token from GitHub
          OIDC_TOKEN=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=cloudflare" | jq -r '.value')

          # Exchange OIDC token for Cloudflare API token
          # This assumes Cloudflare OIDC trust is configured
          CLOUDFLARE_TOKEN=$(curl -X POST "https://api.cloudflare.com/client/v4/user/tokens/verify" \
            -H "Authorization: Bearer $OIDC_TOKEN" \
            -H "Content-Type: application/json" \
            --data '{"oidc_token": "'"$OIDC_TOKEN"'"}' | jq -r '.result.token')

          echo "::add-mask::$CLOUDFLARE_TOKEN"
          echo "CLOUDFLARE_API_TOKEN=$CLOUDFLARE_TOKEN" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ env.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          npx wrangler pages deploy ./out \
            --project-name=gifdistributor \
            --branch=${{ github.ref_name }}

      - name: Deploy Workers (if applicable)
        if: github.ref == 'refs/heads/main'
        env:
          CLOUDFLARE_API_TOKEN: ${{ env.CLOUDFLARE_API_TOKEN }}
        run: |
          # Deploy Cloudflare Workers if present
          if [ -d "workers" ]; then
            cd workers
            npx wrangler deploy
          fi

      - name: Audit deployment
        run: |
          echo "### Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Authentication**: OIDC (no long-lived tokens)" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp**: $(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_STEP_SUMMARY
